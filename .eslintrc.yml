---
root: true

parser: babel-eslint
extends:
  # http://eslint.org/docs/user-guide/configuring#using-eslintrecommended
  - eslint:recommended
  # https://github.com/gajus/eslint-plugin-flowtype
  - plugin:flowtype/recommended
  # https://www.npmjs.com/package/eslint-config-airbnb-base
  - airbnb-base

plugins:
  - import
  - jest
  - flowtype

env:
  es6: true
  browser: true
  node: true
  jest: true
  jasmine: true

parserOptions:
  ecmaVersion: 6
  sourceType: module

rules:
  ### Different from airbnb config

  ### Styling ###

  # better to ignore comments and others
  max-len:
    - error
    -
      code: 80
      ignoreComments: true
      ignoreTrailingComments: true
      ignoreStrings: true
      ignoreTemplateLiterals: true
      ignoreRegExpLiterals: true

  comma-style: [error, last]
  comma-dangle: [error, always-multiline]

  # I prefer new line before error
  # http://eslint.org/docs/rules/newline-before-return
  newline-before-return: error # airbnb default: off

  # I prefer double quotes
  # http://eslint.org/docs/rules/quotes
  quotes: [error, double] # airbnb default: ['error', 'single', { avoidEscape: true }]

  # enforce no padding inside curly braces
  #http://eslint.org/docs/rules/object-curly-spacing
  object-curly-spacing: [error, never]

  ### Variables ###

  # Functions and classes can be used before declaration
  # http://eslint.org/docs/rules/no-use-before-define
  no-use-before-define: # airbnb default: error
    - error
    -
      functions: false
      classes: false

  ### ES6 ###
  # enforce usage of spacing in template strings
  # http://eslint.org/docs/rules/template-curly-spacing
  template-curly-spacing: [error, never] # airbnb default: error

  ### Best practices ###
  # require or disallow Yoda conditions
  yoda: [error, never, { exceptRange: true }]

  # add culry braces all the time
  curly: [error, all] # airbnb default: [error, multi-line]

  ### Import ###
  import/prefer-default-export: 0
  import/first: 0

  ### Errors ###
  no-console: warn
  no-debugger: warn


